// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: profiles.sql

package database

import (
	"context"
)

const addProfile = `-- name: AddProfile :one
INSERT INTO profiles (profile_name)
VALUES (
	?
	)
RETURNING id, profile_name, created_at, updated_at
`

func (q *Queries) AddProfile(ctx context.Context, profileName string) (Profile, error) {
	row := q.db.QueryRowContext(ctx, addProfile, profileName)
	var i Profile
	err := row.Scan(
		&i.ID,
		&i.ProfileName,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getAllProfiles = `-- name: GetAllProfiles :many
SELECT id, profile_name, created_at, updated_at FROM profiles
`

func (q *Queries) GetAllProfiles(ctx context.Context) ([]Profile, error) {
	rows, err := q.db.QueryContext(ctx, getAllProfiles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Profile
	for rows.Next() {
		var i Profile
		if err := rows.Scan(
			&i.ID,
			&i.ProfileName,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
